what is the class ?
The class is the single most important C++ enhancement for implementing these features
and tying them together.A class is a C++ vehicle for translating an abstraction to a user-defined type. It combines
data representation and methods for manipulating that data into one neat package
Generally, a class specification has two parts:
n A class declaration, which describes the data component, in terms of data members,
and the public interface, in terms of member functions, termed methods
n The class method definitions, which describe how certain class member functions are
implemented
how does a class accomplish abstraction , encapsulation , and data hiding ?
In computing, abstraction is the crucial
step of representing information in terms of its interface with the user.That is, you
abstract the essential operational features of a problem and express a solution in those terms
From abstraction, it is a short step to the user-defined type,
which in C++ is a class design that implements the abstract interface
what is the relation between an object and a class ?
Each individual object represents a
single holding. For example, the following declarations create two Stock objects called
sally and solly:
Stock sally;
Stock solly;
The sally object, for example, could represent Sally’s stock holdings in a particular
company.
in what way aside from being functions , are class function members different from class data members ? 
notice that the information you decided to store appears in the form of class data
members, such as company and shares.The company member of sally, for example,
holds the name of the company, the share member holds the number of shares Sally
owns, the share_val member holds the value of each share, and the total_val member
holds the total value of all the shares. Similarly, the desired operations appear as class function
members (or methods), such as sell() and update().A member function can be
defined in place—for example, set_tot()—or it can be represented by a prototype, like
the other member functions in this class.The full definitions for the other member functions
come later in the implementation file, but the prototypes suffice to describe the
function interfaces.The binding of data and methods into a single unit is the most striking
feature of the class. Because of this design, creating a Stock object automatically establishes
the rules governing how that object can be used.

When are classes constructors called ? and when are classes destructors calleddirectly.As
you’ve seen, the only way a program can access the data members is through a member
function.Therefore, you need to devise an appropriate member function if you’re to succeed
in initializing an object. (You could initialize a class object as just shown if you made
the data members public instead of private, but making the data public goes against one of
the main justifications for using classes: data hiding.) ?
what is the default constructors and what is the advantage of having one ?

In computer programming languages the term default constructor can refer to a constructor that is automatically generated by the compiler in the absence of any programmer-defined constructors (e.g. in Java), and is usually a nullary constructor. In other languages (e.g. in C++) it is a constructor that can be called without having to provide any arguments, irrespective of whether the constructor is auto-generated or user-defined. Note that a constructor with formal parameters can still be called without arguments ifdefault arguments were provided in the constructor's definition.

